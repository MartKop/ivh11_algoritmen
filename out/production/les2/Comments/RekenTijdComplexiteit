Tijd complexiteit
O(n)
linear complexity
for(int i = 0; i < n; i++) {
    doshizzle
}
if n gets twice as big, the time consumed is still 1 loop -> so also twice as big


logarithmic complexity
binary search
- Best Case: O(1) or constant complexity;
- Expected Case: O(log n)
- Worst Case: O(log n)

unordered
- Best Case: O(1)
- Expected Case: O(n)
- Worst Case: O(n)

factorial (Travelling Salesman Problem)
1! =
2! =
3! = 3 × 2 × 1 = 6
4! = 4 × 3 × 2 × 1 = 12
5! = 5 × 4 × 3 × 2 × 1 = 120
6! = 6 × 5 × 4 × 3 × 2 × 1 = 720
7! = 7 × 6 × 5 × 4 × 3 × 2 × 1 = 5040